import{_ as e,c as t,o,m as a,a as s}from"./chunks/framework.BG61BEI0.js";const _="/assets/image-20240612150704453.BVm4mXf0.png",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"01-Dev/01.01-Java/JVM/深入理解Java虚拟机/07-高效并发-Java的内存模型与线程.md","filePath":"01-Dev/01.01-Java/JVM/深入理解Java虚拟机/07-高效并发-Java的内存模型与线程.md"}'),r={name:"01-Dev/01.01-Java/JVM/深入理解Java虚拟机/07-高效并发-Java的内存模型与线程.md"},m=a("p",null,[a("img",{src:_,alt:"",loading:"lazy"})],-1),n=a("h2",{id:"jmm-javamemorymodel-java-内存模型",tabindex:"-1"},[s("JMM（JavaMemoryModel） Java 内存模型 "),a("a",{class:"header-anchor",href:"#jmm-javamemorymodel-java-内存模型","aria-label":'Permalink to "JMM（JavaMemoryModel） Java 内存模型"'},"​")],-1),c=a("p",null,"通过 Java 内存模型来屏蔽底层硬件的差异性。来实现 Java 在不同的平台上访问内存的速率都是同样的效果。",-1),v=[m,n,c];function d(l,i,J,p,h,M){return o(),t("div",null,v)}const j=e(r,[["render",d]]);export{u as __pageData,j as default};
