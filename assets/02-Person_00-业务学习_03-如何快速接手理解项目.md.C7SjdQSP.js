import{_ as l,c as i,o as a,a4 as e}from"./chunks/framework.rIDq68an.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{"author":"luyuan","titel":"LuYuan","date":"2024-04-23 18:30","tags":["业务学习","接手项目","上手项目","业务模型"]},"headers":[],"relativePath":"02-Person/00-业务学习/03-如何快速接手理解项目.md","filePath":"02-Person/00-业务学习/03-如何快速接手理解项目.md"}'),o={name:"02-Person/00-业务学习/03-如何快速接手理解项目.md"},t=e('<blockquote><p>沉淀出自己的思考, 时间是有弹性的 没有绝对的银弹 只有合适的方案（做取舍</p></blockquote><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>技术层面的东西都是 CRUD, 且程序员写出的 <code>bug</code> 又分为两个层面 一是 <code>系统 BUG </code> 例如 <code>NPE</code>、 二是 <code>业务 BUG</code> 例如名称字段的前后空格需要去除。金额计算需要向上取整保留几位、上下游是怎么处理的等业务问题</p><h2 id="一、调整心态" tabindex="-1">一、调整心态 <a class="header-anchor" href="#一、调整心态" aria-label="Permalink to &quot;一、调整心态&quot;">​</a></h2><p>不论到什么时候，我总是劝解新人要调整好自己的心态。遇到困难，不要害怕自己弄不明白，弄不出来，就算弄不出来，老板也不一定会直接就开除你。困难是大家都会遇到的，人们往往身在其中而陷入恐惧和无助，但是作为局外人而言，他们更希望看到人们面对困难时所作出的努力和付出。你不需要真正独挡一面，但是最起码要表现出吃苦耐劳，勇往直前的精神。这是一个新人应该做到的一点，也将是一个成功之人不断进步的必要前提。</p><h2 id="二、抓住问题的关键" tabindex="-1">二、抓住问题的关键 <a class="header-anchor" href="#二、抓住问题的关键" aria-label="Permalink to &quot;二、抓住问题的关键&quot;">​</a></h2><p><code>&quot;这个问题的关键, 是要找到关键的问题&quot;</code></p><p>一时半会看不懂业务逻辑，可能是由于信息量过于庞大，这一点我也深有体会。不过我的解决办法是大致过一遍整个业务逻辑，将很模糊的地方标记出来。另外，所有业务都会有非常关键的执行步骤，很多其他的操作可能都是为某个或某几个步骤铺垫和创造执行条件。所以，掌握流程的关键步骤可以让你事半功倍，这样你也不会非常迷茫。</p><h2 id="三、大而化小-小而化了" tabindex="-1">三、大而化小，小而化了 <a class="header-anchor" href="#三、大而化小-小而化了" aria-label="Permalink to &quot;三、大而化小，小而化了&quot;">​</a></h2><p>将关键步骤掌握之后，你就需要以这些关键节点为出发点，分段理解各个环节，化整为零，逐个击破。到了这一步，你就可以将业务逻辑逐条分析，细致分析。切不可急躁。另外，你也可以向领导进行咨询，对于不是特别清楚的地方，一定要沟通清楚。或者让理解比较好的人，大致给你讲一讲这一步要干嘛。多方位寻求帮助。相信不会太久，你就可以将业务完全搞懂了。</p><h2 id="四、最终目标" tabindex="-1">四、最终目标 <a class="header-anchor" href="#四、最终目标" aria-label="Permalink to &quot;四、最终目标&quot;">​</a></h2><ul><li>跨系统、部门、模块直接的相互协同</li><li>是否延期</li><li>是否了解整个系统和细节</li><li>是否在写代码以前就能预见到细节问题</li><li>核心逻辑能否一次性思考完善，不出逻辑漏洞</li><li>带动其他同事，推动整个业务前进，正能量</li><li>同样的错误最多只犯一次</li><li>产品思维，关注用户体验</li><li>合理的时间，可持续性，工作量饱和</li><li>及时汇报</li></ul><h2 id="五、抽象业务模型学习方法" tabindex="-1">五、抽象业务模型学习方法 <a class="header-anchor" href="#五、抽象业务模型学习方法" aria-label="Permalink to &quot;五、抽象业务模型学习方法&quot;">​</a></h2><p>数据源-》数据加工-》数据展示 源： JOB|DB|Case|MQ|RPC 加工： Python| Java 方法定义</p><ol><li>名称关联</li><li>解构 模型</li><li>横向关联 -&gt; 关键字查询</li><li>数据源 -&gt; 展示</li></ol><p>业务推理</p><blockquote><p>通过查看输入输出来分析业务支撑 核心接口出入参查看, 核心字段理解, 溯源</p></blockquote><h2 id="六、学习的方式" tabindex="-1">六、学习的方式 <a class="header-anchor" href="#六、学习的方式" aria-label="Permalink to &quot;六、学习的方式&quot;">​</a></h2><ul><li>费曼学习法</li><li>书写思维导图</li><li>讲与别人听</li><li>整理出博客文档 提升学习效率</li><li>了解一个新技术</li><li>先去快速使用</li><li>看一遍视频整体过一遍（带着问题去学习</li><li>看完之后去看一些文章 博客 书记 还有视频的配套资料</li></ul><h2 id="七、如何编写接口流程文档" tabindex="-1">七、如何编写接口流程文档 <a class="header-anchor" href="#七、如何编写接口流程文档" aria-label="Permalink to &quot;七、如何编写接口流程文档&quot;">​</a></h2><blockquote><p>接口的逻辑梳理文档以及流程图是用于描述接口功能和操作流程的文档和图表。 下面是它们的一般结构和写作步骤：</p></blockquote><ol><li><strong>接口的逻辑梳理文档：</strong> 接口的逻辑梳理文档应该包括以下部分：</li></ol><ul><li>介绍：简要介绍接口的功能和目的；</li><li>功能分析：分析接口的功能，包括各个接口之间的依赖关系；</li><li>接口设计：设计各个接口的具体实现方式和参数，包括输入参数和输出结果；</li><li>接口测试：对接口进行测试，包括测试用例和测试结果；</li><li>常见问题解答：列举常见问题和解答。</li></ul><ol start="2"><li><strong>流程图的制作：</strong> 流程图应该清晰明了，包括以下部分：</li></ol><ul><li>流程描述：简要描述流程图中各个节点的作用和顺序；</li><li>节点：表示流程图中各个节点的名称和具体含义；</li><li>连线：表示各个节点之间的关系和连接方式。</li></ul><ol><li><strong>写作步骤：</strong></li></ol><ul><li>确定接口的目的和功能，包括接口之间的依赖关系；</li><li>根据接口的功能设计各个接口的具体实现方式和参数；</li><li>制作流程图，描述各个节点的作用和顺序；</li><li>确保流程图的清晰明了，易于理解和操作。</li></ul><ol start="2"><li><strong>写作要点：</strong></li></ol><ul><li>使用易于理解的术语和符号，避免使用过于复杂的技术术语；</li><li>描述各个节点的作用和顺序，使流程图更加清晰明了；</li><li>确保流程图中的信息准确无误，以便于他人理解和使用。</li></ul><p>总之，接口的逻辑梳理文档以及流程图是用于描述接口功能和操作流程的文档和图表，需要结合具体情况和写作步骤来进行撰写。</p><hr><p><a href="https://blog.csdn.net/Edraw_Max/article/details/114121736" target="_blank" rel="noreferrer">一篇文章详解系统架构的“4+1”视图_开发视图-CSDN博客</a></p>',32),r=[t];function n(s,c,d,h,u,_){return a(),i("div",null,r)}const q=l(o,[["render",n]]);export{b as __pageData,q as default};
