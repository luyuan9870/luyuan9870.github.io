import{_ as o,c as a,o as i,a4 as t}from"./chunks/framework.BG61BEI0.js";const h=JSON.parse('{"title":"@SpringBootApplication","description":"","frontmatter":{"mindmap-plugin":"basic"},"headers":[],"relativePath":"01-Dev/01.70-业务解决方案/SpringBoot/SpringBootApplication注解.md","filePath":"01-Dev/01.70-业务解决方案/SpringBoot/SpringBootApplication注解.md","lastUpdated":1714031643000}'),n={name:"01-Dev/01.70-业务解决方案/SpringBoot/SpringBootApplication注解.md"},r=t('<h1 id="springbootapplication" tabindex="-1">@SpringBootApplication <a class="header-anchor" href="#springbootapplication" aria-label="Permalink to &quot;@SpringBootApplication&quot;">​</a></h1><h2 id="springbootconfiguration" tabindex="-1">@SpringBootConfiguration <a class="header-anchor" href="#springbootconfiguration" aria-label="Permalink to &quot;@SpringBootConfiguration&quot;">​</a></h2><ul><li>@Configuration 配置注解 <ul><li>@Component Spring组件注解</li></ul></li></ul><h2 id="enableautoconfiguration" tabindex="-1">@EnableAutoConfiguration <a class="header-anchor" href="#enableautoconfiguration" aria-label="Permalink to &quot;@EnableAutoConfiguration&quot;">​</a></h2><ul><li>@AutoConfigurationPackage 让包及其子包下的类 自动注入到Spring容器中 <ul><li>@Import(AutoConfigurationPackages.Registrar.class) 给当前Spring环境导入一个类 : Registrar</li></ul></li><li>@Import(AutoConfigurationImportSelector.class)</li></ul><h2 id="componentscan" tabindex="-1">@ComponentScan <a class="header-anchor" href="#componentscan" aria-label="Permalink to &quot;@ComponentScan&quot;">​</a></h2><ul><li>@ComponentScans</li></ul>',7),e=[r];function l(p,c,s,u,g,_){return i(),a("div",null,e)}const f=o(n,[["render",l]]);export{h as __pageData,f as default};
