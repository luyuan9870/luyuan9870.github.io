import{_ as t,c as s,o,m as e,a}from"./chunks/framework.BG61BEI0.js";const n="/assets/Pastedimage20231012102518.j6-UOAbk.png",v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"01-Dev/01.05-算法/算法路线.md","filePath":"01-Dev/01.05-算法/算法路线.md"}'),r={name:"01-Dev/01.05-算法/算法路线.md"},c=e("p",null,"排序—二分—高精度—前缀和—差分—双指针—位运算—离散化—区间合并—链表—单调栈单调队列—kmp—trie树—并查集—堆—哈希表—dfs和bfs—有向图topsort—朴素Dijkstra—堆优化版Dijkstra—bellman-ford—spfa—Floyd—朴素Prim—Kruskal—二分图染色法—匈牙利算法",-1),l=e("p",null,"Top100？？",-1),_=e("p",null,[e("a",{href:"https://leetcode.cn/circle/discuss/jq9Zke/",target:"_blank",rel:"noreferrer"},"leetcode.cn/circle/discuss/jq9Zke/")],-1),i=e("p",null,[e("img",{src:n,alt:"",loading:"lazy"})],-1),d=e("p",null,[e("strong",null,"三傻排序"),a(" 冒泡排序: 0~n-1 的位置, 相邻比较, 替换， 选择排序: 0~n-1, 插入排序: 斗地主插牌的过程(理牌). = 反过来的冒泡.")],-1),p=[c,l,_,i,d];function m(f,u,h,k,g,D){return o(),s("div",null,p)}const b=t(r,[["render",m]]);export{v as __pageData,b as default};
